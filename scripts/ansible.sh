#!/bin/bash

# Prepares env vars and runs Ansible Playbook

# Ensure strict mode and predictable pipeline failure
set -euo pipefail

#region Init
# env vars set in GH build workflow
# $AKS_CLUSTER_NAME
# $AKS_RG_NAME

# Get AKS Cluster credentials
az aks get-credentials --resource-group $AKS_RG_NAME --name $AKS_CLUSTER_NAME --overwrite-existing
#endregion Init


#region Passwords
# Get auto-generated admin password from within Nexus container
# Get pod name
podName=$(kubectl get pod -n ingress -l app=nexus -o jsonpath="{.items[0].metadata.name}")

# Get admin password from pod
# NOTE: "/nexus-data/admin.password" is deleted after the admin password is changed
adminPassword=$(kubectl exec -n ingress "$podName" -- file="/nexus-data/admin.password"; if [ -e "$file" ]; then cat "$file"; else "NOT_DEFINED"; fi)
if [ "$CI_DEBUG" == "true" ]; then
    echo "Default admin password is: [$adminPassword]"
fi

# Set environment variables for passwords
export AUTOGENERATED_ADMIN_PASSWORD=$adminPassword
export NEW_ADMIN_PASSWORD=$NEXUS_ADMIN_PASSWORD
#endregion Passwords


#region Set base url
# TODO: use $DNS_DOMAIN_NAME and $ENABLE_TLS_INGRESS env vars to set http or https
nexusHost=$(kubectl get ingress ingress --namespace ingress -o jsonpath="{.spec.rules[0].host}")
nexusBaseUrl="https://$nexusHost"
#endregion Set base url


# Run Ansible Playbook
pushd ansible
ansible-playbook nexus.yml --extra-vars "api_base_uri=$nexusBaseUrl"
popd
