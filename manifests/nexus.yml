apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nexus
  namespace: ingress
  labels:
    app: nexus
spec:
  serviceName: nexus
  replicas: 1
  selector:
    matchLabels:
      app: nexus
  template:
    metadata:
      labels:
        app: nexus
    spec:
      # Use securityContext, instead of volume prep using init container
      securityContext:
        runAsUser: 200
        runAsGroup: 2000
        fsGroup: 2000
      # Use init containers to prepare environment,
      # like setting volume owner/permissions
      # initContainers:
      # - name: fmp-volume-permission
      #   image: busybox
      #   imagePullPolicy: IfNotPresent
      #   command: ['chown','-R', '200', '/nexus-data']
      #   volumeMounts:
      #   - name: nexus-data
      #     mountPath: /nexus-data
      containers:
      - name: nexus
        image: sonatype/nexus3:3.21.1
        ports:
        # http-web
        - containerPort: 8081
        # http-docker
        - containerPort: 8123
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: nexus-data
          mountPath: /nexus-data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  volumeClaimTemplates:
  - metadata:
      name: nexus-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: default
      resources:
        requests:
          # minimum is 4Gi, but 8Gi recommended during testing
          storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: nexus
  namespace: ingress
  labels:
    app: nexus
spec:
  ports:
  - name: http-web
    port: 8081
  - name: http-docker
    port: 8123
  selector:
      app: nexus
